"" Load vim-plug
if empty(glob("~/.config/nvim/autoload/plug.vim"))
  execute '!curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.github.com/junegunn/vim-plug/master/plug.vim'
endif

call plug#begin()

" Plugins
Plug 'junegunn/vim-plug'
Plug 'cakebaker/scss-syntax.vim', { 'for': 'scss' }
Plug 'valloric/youcompleteme', { 'do': 'python3 install.py --tern-completer --clang-completer'}
Plug 'tpope/vim-fugitive'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'tpope/vim-surround'
Plug 'mattn/emmet-vim',  { 'for': 'html' }
Plug 'othree/html5.vim', { 'for': 'html' }
Plug 'hail2u/vim-css3-syntax', { 'for': [ 'css', 'scss', 'html' ] }
Plug 'gko/vim-coloresque', { 'for': [ 'css', 'scss', 'html' ] }
Plug 'raimondi/delimitmate'
Plug 'Yggdroot/indentLine'
Plug 'tpope/vim-commentary'
Plug 'terryma/vim-multiple-cursors'
Plug 'editorconfig/editorconfig-vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'jmcantrell/vim-virtualenv', { 'for': 'python' }
Plug 'ehamberg/vim-cute-python', { 'for': 'python' }
Plug 'sheerun/vim-polyglot'
Plug 'airblade/vim-gitgutter'
Plug 'majutsushi/tagbar'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'FelikZ/ctrlp-py-matcher'
Plug 'jeffkreeftmeijer/vim-numbertoggle'
Plug 'ryanoasis/vim-devicons'

"Colorschemas
Plug 'evgenyzinoviev/vim-vendetta'
Plug 'dfxyz/CandyPaper.vim'
Plug 'thomd/vim-wasabi-colorscheme'
Plug 'vim-scripts/Perfect-Dark'
Plug 'tomsik68/vim-crystallite'
Plug 'blindFS/flattr.vim'

call plug#end()

filetype plugin indent on

colorscheme vendetta
hi Normal ctermbg=none

let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }

let g:EditorConfig_exclude_patterns = ['fugitive://.*']

let g:ycm_complete_in_strings = 0
let g:ycm_autoclose_preview_window_after_completion = 1

let g:indent_guides_auto_colors = 1
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4

let g:airline_powerline_fonts = 1
let g:airline#extensions#whitespace#checks = [ 'indent', 'trailing', 'long', 'mixed-indent-file' ]
let g:airline_theme = 'wombat'

"let g:indentLine_enabled = 1
let g:indentLine_indentLevel = 3

set listchars=tab:▸\ ,trail:·,extends:>,precedes:<,nbsp:·
if &termencoding ==# 'utf-8' || &encoding ==# 'utf-8'
    set listchars=tab:⇥\ ,trail:␣,extends:⇉,precedes:⇇,nbsp:⚭
    set fillchars=vert:╎,fold:·
endif
set list

set ruler
set number
set relativenumber

set autoindent
set copyindent
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smartindent
set smarttab
set expandtab
set shiftround

set nowrap
set textwidth=80
set showmatch
set autoread
set showcmd

set hlsearch
set smartcase
set incsearch

set backspace=indent,eol,start
set hidden

set scrolloff=4
set sidescrolloff=2
set sidescroll=1

set title

set nobackup

let mapleader=","
let g:NumberToggleTrigger="<F2>"

map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" Easy window navigation
tnoremap <A-h> <C-\><C-n><C-w>h
tnoremap <A-j> <C-\><C-n><C-w>j
tnoremap <A-k> <C-\><C-n><C-w>k
tnoremap <A-l> <C-\><C-n><C-w>l
nnoremap <A-h> <C-w>h
nnoremap <A-j> <C-w>j
nnoremap <A-k> <C-w>k
nnoremap <A-l> <C-w>l

nmap <silent> ,/ :nohlsearch<CR>

cmap w!! w !sudo tee % >/dev/null

autocmd BufRead nvim set filetype=vim

""" memap CAPS LOCK to ESC
autocmd VimEnter * !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'
autocmd VimLeave * !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Caps_Lock'

:tnoremap <ESC> <C-\><C-n>

set concealcursor=nc

" " Copy to clipboard
vnoremap  <leader>y  "+y
vnoremap  <leader>Y  "*y
nnoremap  <leader>y  "+y
nnoremap  <leader>yy  "+yy
nnoremap  <leader>Y  "*y
nnoremap  <leader>YY  "*yy

" " Paste from clipboard
nnoremap <leader>p "*p
nnoremap <leader>P "*P
vnoremap <leader>p "*p
vnoremap <leader>P "*P
